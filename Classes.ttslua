-- DnDCS classes --
local DndCSClasses = {}

-- enum setup
function DndCSClasses.enum(tbl)
    local length = #tbl
    for i = 1, length do
        local v = tbl[i]
        tbl[v] = i
        tbl[i] = nil
    end

    return tbl
end

DndCSClasses.Proficiency = DndCSClasses.enum {
  "NOT_PROFICIENT",
  "PROFICIENT",
  "EXPERTISE"
}

DndCSClasses.Attributes = {
  defaults = {
    str = 0,
    dex = 0,
    con = 0,
    int = 0,
    wis = 0,
    cha = 0
  }
}
DndCSClasses.Attributes.mt = {
  __index = function(table, key)
    return DndCSClasses.Attributes.defaults[key]
  end
}
function DndCSClasses.Attributes:new (o)
  return setmetatable(o or {}, self.mt)
end

DndCSClasses.Saves = {
  defaults = {
    str = false,
    dex = false,
    con = false,
    int = false,
    wis = false,
    cha = false,
  }
}
DndCSClasses.Saves.mt = {
  __index = function(table, key)
    return DndCSClasses.Saves.defaults[key]
  end
}
function DndCSClasses.Saves:new (o)
  return setmetatable(o or {}, self.mt)
end

DndCSClasses.Skills = {
  defaults = {
      acrobatics = DndCSClasses.Proficiency.NOT_PROFICIENT,
      animal_handling = DndCSClasses.Proficiency.NOT_PROFICIENT,
      arcana = DndCSClasses.Proficiency.NOT_PROFICIENT,
      athletics = DndCSClasses.Proficiency.NOT_PROFICIENT,
      deception = DndCSClasses.Proficiency.NOT_PROFICIENT,
      history = DndCSClasses.Proficiency.NOT_PROFICIENT,
      insight = DndCSClasses.Proficiency.NOT_PROFICIENT,
      intimidation = DndCSClasses.Proficiency.NOT_PROFICIENT,
      investigation = DndCSClasses.Proficiency.NOT_PROFICIENT,
      medicine = DndCSClasses.Proficiency.NOT_PROFICIENT,
      nature = DndCSClasses.Proficiency.NOT_PROFICIENT,
      perception = DndCSClasses.Proficiency.NOT_PROFICIENT,
      performance = DndCSClasses.Proficiency.NOT_PROFICIENT,
      persuasion = DndCSClasses.Proficiency.NOT_PROFICIENT,
      religion = DndCSClasses.Proficiency.NOT_PROFICIENT,
      slight_of_hand = DndCSClasses.Proficiency.NOT_PROFICIENT,
      stealth = DndCSClasses.Proficiency.NOT_PROFICIENT,
      survival = DndCSClasses.Proficiency.NOT_PROFICIENT
    },
  mt = {
    __index = function(table, key)
      return self.defaults[key]
    end
  }
}
function DndCSClasses.Skills:new(o)
  return setmetatable(o or {}, self.mt)
end

DndCSClasses.PC = {
  defaults = {
    cs_panel_active = false,
    cs_panel_page = 1,
    name = "Name",
    level = 1,
    class = "Class",
    inspiration = 0,
    proficiency_bonus = 0,
    attributes = DndCSClasses.Attributes.defaults,
    saves = DndCSClasses.Saves.defaults,
    skills = DndCSClasses.Skills.defaults,
    passive_perception = 10,
    ac = 10,
    initiative = 0,
    speed = 30,
    hp_current = 0,
    hp_max = 0,
    hp_temp = 0,
    hit_dice_current = 0,
    hit_dice_max = 0,
    hit_dice_d = 8,
    death_saves_successes = 0,
    death_saves_failures = 0,
    attacks = {}
  }
}
DndCSClasses.PC.mt = {
  __index = function(table, key)
    return DndCSClasses.PC.defaults[key]
  end
}
function DndCSClasses.PC:new (o)
  o = o or {}
  setmetatable(o or {}, self.mt)
  o.attributes = DndCSClasses.Attributes:new(o.attributes)
  o.saves = DndCSClasses.Saves:new(o.saves)
  o.skills = DndCSClasses.Skills:new(o.skills)
  return o
end

DndCSClasses.ActivePC = {
  steam_name = "",
  color = nil,
}
function DndCSClasses.ActivePC:new (o)
  o = o or {}
  setmetatable(o, self)
  self.__index = self
  return o
end
function DndCSClasses.ActivePC:setColor(color)
  self.color = color
end

return DndCSClasses
