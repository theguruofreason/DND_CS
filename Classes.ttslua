-- DnDCS classes --
local DndCSClasses = {}

-- enum setup
function DndCSClasses.enum(tbl)
    local length = #tbl
    for i = 1, length do
        local v = tbl[i]
        tbl[v] = i
        tbl[i] = v
    end
    return tbl
end

DndCSClasses.Proficiency = DndCSClasses.enum {
  "NOT_PROFICIENT",
  "PROFICIENT",
  "EXPERTISE"
}

DndCSClasses.Attributes = {
  defaults = {
    str = 0,
    dex = 0,
    con = 0,
    int = 0,
    wis = 0,
    cha = 0
  }
}
function DndCSClasses.Attributes:new(o)
  return setmetatable(
  o or {},
  {
    __index = function(table, key)
      return DndCSClasses.Attributes.defaults[key]
    end
  })
end

DndCSClasses.Saves = {
  defaults = {
    str = false,
    dex = false,
    con = false,
    int = false,
    wis = false,
    cha = false,
  }
}
function DndCSClasses.Saves:new(o)
  return setmetatable(
  o or {},
  {
    __index = function(table, key)
      return DndCSClasses.Saves.defaults[key]
    end
  })
end

DndCSClasses.Skills = {
  defaults = {
    acrobatics = DndCSClasses.Proficiency.NOT_PROFICIENT,
    animal_handling = DndCSClasses.Proficiency.NOT_PROFICIENT,
    arcana = DndCSClasses.Proficiency.NOT_PROFICIENT,
    athletics = DndCSClasses.Proficiency.NOT_PROFICIENT,
    deception = DndCSClasses.Proficiency.NOT_PROFICIENT,
    history = DndCSClasses.Proficiency.NOT_PROFICIENT,
    insight = DndCSClasses.Proficiency.NOT_PROFICIENT,
    intimidation = DndCSClasses.Proficiency.NOT_PROFICIENT,
    investigation = DndCSClasses.Proficiency.NOT_PROFICIENT,
    medicine = DndCSClasses.Proficiency.NOT_PROFICIENT,
    nature = DndCSClasses.Proficiency.NOT_PROFICIENT,
    perception = DndCSClasses.Proficiency.NOT_PROFICIENT,
    performance = DndCSClasses.Proficiency.NOT_PROFICIENT,
    persuasion = DndCSClasses.Proficiency.NOT_PROFICIENT,
    religion = DndCSClasses.Proficiency.NOT_PROFICIENT,
    slight_of_hand = DndCSClasses.Proficiency.NOT_PROFICIENT,
    stealth = DndCSClasses.Proficiency.NOT_PROFICIENT,
    survival = DndCSClasses.Proficiency.NOT_PROFICIENT
  }
}
function DndCSClasses.Skills:new(o)
  return setmetatable(
  o or {},
  {
    __index = function(table, key)
      return DndCSClasses.Skills.defaults[key]
    end
  })
end

DndCSClasses.skill_to_att = {
  acrobatics = "dex",
  animal_handling = "wis",
  arcana = "int",
  athletics = "str",
  deception = "cha",
  history = "int",
  insight = "wis",
  intimidation = "cha",
  investigation = "int",
  medicine = "wis",
  nature = "int",
  perception = "wis",
  performance = "cha",
  persuasion = "cha",
  religion = "int",
  slight_of_hand = "dex",
  stealth = "dex",
  survival = "wis"
}

DndCSClasses.PC = {
  defaults = {
    cs_panel_active = false,
    cs_panel_page = 1,
    char_name = "",
    level = 1,
    class = "",
    inspiration = 0,
    proficiency_bonus = 0,
    attributes = DndCSClasses.Attributes.defaults,
    saves = DndCSClasses.Saves.defaults,
    skills = DndCSClasses.Skills.defaults,
    passive_perception = 10,
    ac = 10,
    initiative = 0,
    speed = 30,
    hp_current = 0,
    hp_max = 0,
    hp_temp = 0,
    hit_dice_current = 0,
    hit_dice_max = 0,
    hit_dice_d = 8,
    death_saves_successes = 0,
    death_saves_failures = 0,
    attacks = {}
  },
  direct_editables = {
    "char_name",
    "level",
    "class",
    "inspiration",
    "proficiency_bonus",
    "passive_perception",
    "ac",
    "initiative",
    "speed",
    "hp_current",
    "hp_max",
    "hp_temp",
    "hit_dice_current",
    "hit_dice_max",
    "hit_dice_d",
    "attacks"
  }
}
function DndCSClasses.PC:new(o)
  return setmetatable(o or {},
  {
    __index = function(table, key)
      return DndCSClasses.PC.defaults[key]
    end
  })
end

DndCSClasses.RollStatus = {
  rolling = false,
  dice = {},
  waiting_to_roll = false,
  message = "",
  bonus = 0,
  allowMultiroll = false,
  onlyAnnounceToColor = nil,
  timerName = ""
}
function DndCSClasses.RollStatus:new (o)
  return setmetatable(o or {}, {
    __index = DndCSClasses.RollStatus.__index
  })
end

return DndCSClasses
